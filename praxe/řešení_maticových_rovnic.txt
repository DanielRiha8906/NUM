gauss_elimination <- function(A, b) {
  n <- nrow(A)  # Number of rows/columns in A
  
  # Forward Elimination
  for (k in 1:(n - 1)) {
    # Pivot for numerical stability (optional)
    max_row <- which.max(abs(A[k:n, k])) + k - 1
    if (max_row != k) {
      A[c(k, max_row), ] <- A[c(max_row, k), ]  # Swap rows
      b[c(k, max_row)] <- b[c(max_row, k)]      # Swap b values
    }
    
    for (i in (k + 1):n) {
      factor <- A[i, k] / A[k, k]  # Calculate factor for row reduction
      A[i, k:n] <- A[i, k:n] - factor * A[k, k:n]  # Eliminate variable
      b[i] <- b[i] - factor * b[k]                 # Update RHS vector
    }
  }
  
  # Back Substitution
  x <- numeric(n)  # Initialize solution vector
  for (i in n:1) {
    x[i] <- (b[i] - sum(A[i, (i + 1):n] * x[(i + 1):n])) / A[i, i]
  }
  
  return(x)  # Return the solution vector
}
